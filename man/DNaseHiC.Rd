\name{DNaseHiC}
\alias{prepPseudoPairs}
\alias{segmentGenome}

\title{Methods for processing DNase Hi-C data}
\description{Processing of BAM files for DNase Hi-C into index files}

\usage{
segmentGenome(bs)

prepPseudoPairs(bam, param, file, dedup=TRUE, minq=NA, ichim=TRUE, 
    chim.span=1000, output.dir=NULL, storage=5000L)
}

\arguments{
	\item{bs}{a \code{BSgenome} object, or a character string pointing to a FASTA file, or a named integer vector of chromosome lengths}
	\item{bam}{a character string containing the path to a name-sorted BAM file}
	\item{param}{a \code{pairParam} object containing read extraction parameters}
	\item{file}{a character string specifying the path to an output index file}
	\item{dedup}{a logical scalar indicating whether marked duplicate reads should be removed}
	\item{minq}{an integer scalar specifying the minimum mapping quality for each read}
	\item{ichim}{a logical scalar indicating whether invalid chimeras should be counted}
	\item{chim.span}{an integer scalar specifying the maximum span between a chimeric 3' end and a mate read}
    \item{output.dir}{a character string specifying a directory for temporary files}
    \item{storage}{an integer scalar specifying the maximum number of pairs to store in memory before writing to file}
}

\details{
DNase Hi-C involves random fragmentation with DNase instead of restriction enzymes.
This requires some extra care to handle as \code{diffHic} relies on fragment assignments in many functions.

To indicate that the data are generated by DNase Hi-C, an empty GRanges object should be supplied as the \code{fragments} in \code{\link{pairParam}}.
Genome information will instead be extracted from the \code{seqlengths} of the GRanges object.
This empty object can be generated by \code{segmentGenome} from a variety of supplied arguments.
Also see \code{\link{cutGenome}} documentation for a warning about the chromosome names.

To process a BAM file,  \code{prepPseudoPairs} is used instead of \code{\link{preparePairs}}.
Their behaviours are almost identical - see \code{?\link{preparePairs}} for detailed descriptions of all arguments.
However, there are some key differences in \code{prepPseudoPairs}:
\itemize{
\item No reporting or removal of self-circles or dangling ends is performed, as these have no meaning for artificial fragments.
\item Invalidity of chimeras is determined by checking whether the 3' end is more than \code{chim.span} away from the mate read, without checking for mapping to different fragments.
\item All fragment IDs in the output HDF5 file will be set to zero.
}
}

\value{
For \code{segmentGenome}, an empty \code{GRanges} object is produced containing the sequence names and lengths.

For \code{prepPseudoPairs}, a HDF5-formatted index file is produced at the specified location.
A list of diagnostic vectors are also returned in the same format as that from \code{\link{preparePairs}}, without the \code{same.id} entry.
}


\seealso{
\code{\link{preparePairs}},
\code{\link{cutGenome}}
}

\author{Aaron Lun}

\examples{
# Pretend that this example is DNase Hi-C.
hic.file <- system.file("exdata", "hic_sort.bam", package="diffHic")
cuts <- readRDS(system.file("exdata", "cuts.rds", package="diffHic"))
pseudo <- segmentGenome(seqlengths(cuts))
param <- pairParam(pseudo) 

tmpf <- "gunk.h5"
prepPseudoPairs(hic.file, param, tmpf)
prepPseudoPairs(hic.file, param, tmpf, dedup=FALSE)
prepPseudoPairs(hic.file, param, tmpf, minq=50)
prepPseudoPairs(hic.file, param, tmpf, chim.span=20)

getPairData(tmpf)

\dontshow{
unlink(tmpf)
}
}

\keyword{preprocessing}
